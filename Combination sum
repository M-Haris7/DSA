class Solution {
public:
    void possibleCombos(int i, int target, vector<int> &arr, vector<vector<int>> &ans, vector<int> &temp)
    {
        if(i == arr.size())     // termination condition
        {
            if(target == 0)
            {
                ans.push_back(temp);
            }
            return;
        }
        // picking an element 1s or multiple time
        if(arr[i] <= target)
        {
            temp.push_back(arr[i]);
            possibleCombos(i, target-arr[i], arr, ans, temp);
            temp.pop_back();
        }
        // leaving an element
        possibleCombos(i+1, target, arr, ans, temp);

    }
public:
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        vector<vector<int>> ans;
        vector<int> temp;
        possibleCombos(0, target, candidates, ans, temp);
        return ans;
        
    }
};
