class RandomizedSet {
public:
    vector<int> elements;
    unordered_map<int,int> indexMap;
    RandomizedSet() {
        
    }
    
    bool insert(int val) {
        if(indexMap.find(val) != indexMap.end())
            return false;
        
        elements.push_back(val);
        indexMap[val] = elements.size() - 1;
        return true;
    }
    
    bool remove(int val) {
        if(indexMap.find(val) == indexMap.end())
            return false;

        // swap last element with val
        int lastElement = elements.back();
        int valIndex = indexMap[val];
        elements[valIndex] = lastElement;
        indexMap[lastElement] = valIndex;
        elements.pop_back();
        indexMap.erase(val);

        return true;
    }
    
    int getRandom() {
        int n = elements.size();
        int randomIndex = rand() % n;
        return elements[randomIndex];
    }
};

/**
 * Your RandomizedSet object will be instantiated and called as such:
 * RandomizedSet* obj = new RandomizedSet();
 * bool param_1 = obj->insert(val);
 * bool param_2 = obj->remove(val);
 * int param_3 = obj->getRandom();
 */
