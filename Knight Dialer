class Solution {
public:
    int MOD = 1e9 + 7;
    vector<vector<int>> adjList{
        {4, 6},
        {6, 8},
        {7, 9},
        {4, 8},
        {3, 9, 0},
        {},
        {1, 7, 0},
        {2, 6},
        {1, 3},
        {2, 4}
    };
    
    int dp[5001][10];

    int countPhoneNumbers(int n, int startCell)
    {
        if(n == 0)
        {
            return 1;
        }

        if(dp[n][startCell] != -1)
        {
            return dp[n][startCell];
        }

        int res = 0;
        for(int &nextCell : adjList[startCell])
        {
            res = (res + countPhoneNumbers(n-1, nextCell)) % MOD;
        }

        return dp[n][startCell] = res;
    }

    int knightDialer(int n) {
        int ans = 0;
        memset(dp, -1, sizeof(dp));

        for(int cell=0; cell<=9; cell++)
        {
            ans = (ans + countPhoneNumbers(n-1, cell)) % MOD;
        }

        return ans;
    }
};
