class Solution {
public:
    int garbageCollection(vector<string>& garbage, vector<int>& travel) {
        int n = garbage.size();

        int M_idx = 0;
        int G_idx = 0;
        int P_idx = 0;

        for(int j=1; j<travel.size(); j++)
        {
            travel[j] += travel[j-1];
        }

        int totalTime = 0;
        for(int i=0; i<n; i++)
        {
            for(int k=0; k<garbage[i].length(); k++)
            {
                if(garbage[i][k] == 'M')
                {
                    M_idx = i;
                    totalTime++;
                }
                else if(garbage[i][k] == 'G')
                {
                    G_idx = i;
                    totalTime++;
                }
                else
                {
                    P_idx = i;
                    totalTime++;
                }
            }
        }

        totalTime += M_idx > 0 ? travel[M_idx-1] : 0;
        totalTime += G_idx > 0 ? travel[G_idx-1] : 0;
        totalTime += P_idx > 0 ? travel[P_idx-1] : 0;

        return totalTime;
    }
};
