class Solution {
public:
    int MOD = 1e9 + 7;
    int len;
    int dp[501][501];
    int solve(int i, int steps)
    {
        if(i < 0 || i >= len)
        {
            return 0;
        }
        if(steps == 0)
        {
            if(i == 0)
                return 1;
            return 0;
        }

        if(dp[i][steps] != -1)
        {
            return dp[i][steps];
        }

        int move = solve(i+1, steps-1) % MOD; //Right
        move = (move + solve(i-1, steps-1)) % MOD; //left
        move = (move + solve(i, steps-1)) % MOD; //stay

        return dp[i][steps] = move % MOD;
    }
    int numWays(int steps, int arrLen) {
        memset(dp, -1, sizeof(dp));
        len = min(arrLen, steps);
        return solve(0, steps);
    }
};
