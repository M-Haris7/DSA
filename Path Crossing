class Solution {
public:
    bool isPathCrossing(string path) {
        unordered_map<char, pair<int, int>> directions;
        directions['N'] = {0, 1};
        directions['S'] = {0, -1};
        directions['W'] = {-1, 0};
        directions['E'] = {1, 0};

        unordered_set<string> visited;
        visited.insert("0,0");

        int x = 0;
        int y = 0;
        for(char ch : path)
        {
            pair<int,int> curr = directions[ch];
            int x_ = curr.first; // change in x
            int y_ = curr.second; // change in y
            x += x_;
            y += y_;

            string move = to_string(x) + "," + to_string(y);
            if(visited.find(move) != visited.end())
            {
                return true;
            }

            visited.insert(move);
        }

        return false;
    }
};
